{"name":"Asymptus","tagline":"Automatic inference of function complexity through polynomial interpolation","body":"# Asymptus Complexity Analyzer\r\n\r\nAsymptus is a tool for automatic inference of function complexity. It uses a hibrid approach, \r\nmixing static analysis and dynamic profiling, in order to provide more accurate results.\r\n\r\nThis tool was implemented by @demontiejr and @juniocezar.\r\n\r\n# Installing\r\n\r\nAsymptus requires LLVM 3.4 to performe static analysis. To install LLVM 3.4 you can follow\r\nthese tutorials: [downloading a specific version of LLVM](http://llvm.org/docs/GettingStarted.html#checkout-llvm-from-subversion)\r\nand [installing LLVM](http://llvm.org/docs/GettingStarted.html#getting-started-quickly-a-summary).\r\nNote that its necessary to also install clang, the LLVM front-end.\r\n\r\nOnce you have a working installation of LLVM 3.4, you can download the Asymptus binaries or\r\nsource code and install it.\r\n\r\n## Usage\r\n\r\nAsymptus executes over either a C/C++ file or LLVM bytecodes. The simplest way to run our tool\r\nis to execute `./asymptus input_file.(c|cpp|bc)`. It will identify how many command line arguments\r\nthe input program reads and generate numeric values for them. You may also use the following\r\noptions:\r\n```\r\n --args type ....         Allows the user to specify the types of command line arguments.\r\n                          It is necessary to specify as many argument as the program reads\r\n                          in order to have a correct execution. The types may be one of the\r\n                          following: int, long, float, double, num, char or string.\r\n\r\n --mix ARG ..             Allows the user to mix random generated arguments with concrete \r\n                          data. When using this option, the random arguments types have to \r\n                          come between {}. For instance, --mix myInput {int}.\r\n                          \r\n --man                    This option will ask the user for only concrete inputs. Asymptus will\r\n                          ask for the inputs of each desired execution. An empty line means all\r\n                          data has been provided.\r\n                              \r\n -v                       Verbose mode. Prints the polynomial for each loop inside a function.\r\n \r\n -h or --help             Prints this usage message.\r\n```\r\n\r\n##### Demonstration of usage (audio in Portuguese)\r\n\r\n<iframe width=\"560\" height=\"315\" src=\"https://www.youtube.com/embed/pzfrIDfoCEc\" frameborder=\"0\" allowfullscreen></iframe>\r\n\r\n## Download\r\n\r\n- [Linux binaries](linx here)\r\n- [Mac OS X binaries](link here)","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}